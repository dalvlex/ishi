#!/usr/bin/php
<?php
require_once( realpath( dirname( __FILE__ ) ) . '/../lib/functions.main.php' );

$settings = read_settings($f_settings);
$conf_folder = $settings['.lock_sites'];
$web_server = $settings['.web'];
$phpdeny_folder='/etc/'.$web_server.'/sites-locked/';

$config=array();
if(empty($argv[1])){
	echo "ERROR: No argument supplied!\n";
	exit;
}
else{
$name = $argv[1];
}
if(is_file($conf_folder.'/'.$name.".conf")===FALSE){
	echo "ERROR: Configuration does not exist for {$name}\n";
	exit;
}

echo "Reading config.\n";
$file=file_get_contents($conf_folder.'/'.$name.".conf");
if(strpos($file,'=')===FALSE){
	echo "ERROR: No usable data in config file.\n";
	exit;
}
$file=explode("\n",$file);
foreach($file as $fv){
	$fv=trim($fv);
	if(strcmp(substr($fv,0,1),"#")===0|strpos($fv,"=")===FALSE) continue;
	$fv=explode("=",$fv);
	$config[$fv[0]][]=$fv[1];
}
/*if(empty($config['lock_dirfile'])|empty($config['lock_fileedit'])|empty($config['lock_ownerread'])|empty($config['allowwrite_denyphp'])) { 
	echo "ERROR: At least one of each must be present in config lock_dirfile, lock_fileedit, lock_ownerread, allowwrite_denyphp.\n";
	exit;
}*/
echo "Safety unlock first.\n";
`/root/ishi/bin/unlock-site $name`;

echo "Locking site {$name}:\n";
if(isset($config['lock_dirfile']) && is_array($config['lock_dirfile']))
foreach($config['lock_dirfile'] as $cv){
	$cv=rtrim($cv,"/");
	echo "- Lock directory & file creation for DIR {$cv}\n";
	`chmod 555 $cv`;
	`find $cv -type d -exec chmod 555 {} +`;
}
if(isset($config['lock_fileedit']) && is_array($config['lock_fileedit']))
foreach($config['lock_fileedit'] as $cv){
    $cv=rtrim($cv,"/")."/";
    echo "- Lock file editing for DIR {$cv}\n";
    `find $cv -type f -exec chmod 444 {} +`;
}
if(isset($config['lock_ownerread']) && is_array($config['lock_ownerread']))
foreach($config['lock_ownerread'] as $cv){
    echo "- Allow read only for owner for FILE {$cv}\n";
    `chmod 400 $cv`;
}
if(isset($config['allowwrite_denyphp']) && is_array($config['allowwrite_denyphp']))
foreach($config['allowwrite_denyphp'] as $cv){
    $cv=rtrim($cv,"/");
    echo "- Allow write for DIR {$cv}\n";
    `chmod 755 $cv`;
    `find $cv -type d -exec chmod 755 {} +`;
	`find $cv -type f -exec chmod 644 {} +`;
}
if(isset($config['lock_dirfile']) && is_array($config['lock_dirfile']))
foreach($config['lock_dirfile'] as $cv){
    $cv=rtrim($cv,"/");
    echo "- Make all files immutable for DIR {$cv}\n";
    `chattr +i $cv`;
    `find $cv -type f -exec chattr +i {} +`;
}
if(isset($config['allowwrite_denyphp']) && is_array($config['allowwrite_denyphp']))
foreach($config['allowwrite_denyphp'] as $cv){
    $cv=rtrim($cv,"/");
    echo "- Remove immutable flag for DIR {$cv}\n";
    `chattr -i $cv`;
    `find $cv -type f -exec chattr -i {} +`;
}

//lock site
$phpd="";
if(isset($config['allowwrite_denyphp']) && is_array($config['allowwrite_denyphp']))
foreach($config['allowwrite_denyphp'] as $cv){
    $cv=trim($cv);
    echo "- Deny PHP execution in DIR {$cv}\n";
	$phpd.=$cv.'|';
}
$phpd=trim($phpd,"|");

if(isset($config['allowwrite_denyphp']) && is_array($config['allowwrite_denyphp'])){
	if(strcmp($web_server, 'nginx') === 0){
		$phpd='location ~* /('.$phpd.')/.*\.php$ {
			return 403;
		}
		';
	}else{
		$phpd='<Directory "^('.$phpd.')">
	     <FilesMatch "(?i)\.(php|php3?|phtml)$">
	            Order Deny,Allow
	            Deny from All
	    </FilesMatch>
	 </Directory>';
	}
}
file_put_contents($phpdeny_folder.$name,$phpd);

echo "- Disable password for {$name}\n";
//remove passwd
if(strcmp($web_server, 'nginx') === 0){
	file_put_contents($phpdeny_folder.$name.'_passwd','');
}
else{
	file_put_contents($phpdeny_folder.$name.'_passwd','Require all granted');
}

echo "END - {$web_server} Reload\n";
`service {$web_server} reload`;

?>
